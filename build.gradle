buildscript {
    ext.kotlin_version = '1.2.71'
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
    }
}

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.2.71'
    id 'com.jfrog.bintray' version '1.7.3'
    id 'maven-publish'
}

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

ext {
    bintrayRepo = 'maven'
    bintrayName = 'kotlin-ref-delegation'

    publishedGroupId = 'ru.nikitabobko.kotlin.refdelegation'
    libraryName = 'kotlin-ref-delegation'
    artifact = 'kotlin-ref-delegation'

    libraryDescription = 'Kotlin library which implements delegation for SoftReference and WeakReference'

    siteUrl = 'https://github.com/nikitabobko/kotlin-ref-delegation'
    gitUrl = 'https://github.com/nikitabobko/kotlin-ref-delegation.git'

    libraryVersion = '1.0'

    developerId = 'bobko'
    developerName = 'Nikita Bobko'
    developerEmail = 'nikitabobko@gmail.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

group = publishedGroupId
version = libraryVersion

def pomConfig = {
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "bobko"
            name "Nikita Bobko"
            email "nikitabobko@gmail.com"
        }
    }

    scm {
        url siteUrl
    }
}

publishing {
    publications {
        mavenPublication(MavenPublication) {
            from components.java
            artifact sourcesJar {
                classifier "sources"
            }
            artifact javadocJar {
                classifier "javadoc"
            }
            groupId publishedGroupId
            artifactId artifact
            version libraryVersion
            pom.withXml {
                def root = asNode()
                root.appendNode('description', libraryDescription)
                root.appendNode('name', bintrayName)
                root.appendNode('url', siteUrl)
                root.children().last() + pomConfig
            }
        }
    }
}

Properties properties = new Properties()
properties.load(project.rootProject.file('bintray.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    publish = true
    configurations = ['archives']

    pkg {
        repo = bintrayName
        name = bintrayName
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
        }
    }
}
